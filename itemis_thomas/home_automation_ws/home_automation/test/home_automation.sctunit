testclass home_automation for statechart Statechart {
    @Test
    operation isLightOffAfterInit() {
            enter
            assert state.light == false
            raise sensors.motion
            assert state.light == false
            exit
    }

    @Test
    operation testLightOn() {
            enter
            assert state.light == false
            raise control_panel.light
            assert state.light == true
            proceed 12s
            assert state.light == true
            raise sensors.motion
            proceed 12s
            assert state.light == true
            exit
    }

    @Test
    operation testLightAuto() {
            enter
            raise control_panel.light
            raise control_panel.light

            assert state.light == false
            exit
    }
    
    @Test
    operation testLightAutoMovement() {
            enter
            raise control_panel.light
            raise control_panel.light
            assert state.light == false

            raise sensors.motion
            assert state.light == true

            proceed 5s
            assert state.light == true

            proceed 6s // 11s after motion, lights should be off
            assert state.light == false

            // Test repeated motion
            raise sensors.motion
            assert state.light == true
            proceed 8s
            raise sensors.motion
            proceed 8s
            assert state.light == true

            proceed 2s
            assert state.light == false
            exit
    }
    
	operation testAlarmInit() {
        enter
        assert state.armed == false
        assert !state.siren
        exit
    }

	@Test
	operation testArming() {
        enter
        raise control_panel.alarm       // start arming
        proceed 3s
        raise sensors.door
        raise sensors.window
        raise sensors.motion
        assert !state.siren
        assert state.armed == false
        raise control_panel.alarm       // abort arming
        assert state.armed == false
        assert !state.siren
        proceed 5s
        assert state.armed == false
        assert !state.siren

        proceed 2s
        raise control_panel.alarm       // start arming
        proceed 5s
        assert state.armed == true
        assert !state.siren
        exit
    }

	@Test
	operation testAlarmTriggeredByWindow() {
        enter
        raise control_panel.alarm
        proceed 5s
        assert state.armed == true
        raise sensors.window
        assert state.siren
        exit
    }

	@Test
	operation testAlarmTriggeredByDoor() {
        enter
        // Test door sensor and disarm
        raise control_panel.alarm
        proceed 5s
        assert state.armed == true
        raise sensors.door
        proceed 4s
        assert !state.siren
        control_panel.code_input = "1234"
        raise control_panel.alarm
        proceed 5s
        assert state.armed == false
        assert !state.siren

        // Test door triggers alarm
        raise control_panel.alarm
        proceed 5s
        assert state.armed == true
        raise sensors.door
        proceed 11s
        assert state.siren
        exit
    }

	@Test
	operation testAlarmTriggeredByMotion() {
        enter
        // Arm alarm
        raise control_panel.alarm
        proceed 5s
        assert state.armed == true

        // Test than 4 or more motion events trigger the alarm
        raise sensors.motion
        proceed 1s
        raise sensors.motion
        proceed 1s
        raise sensors.motion
        proceed 1s
        raise sensors.motion
        proceed 1s
        assert state.siren
        exit
    }
}
